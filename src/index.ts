import { block, chunk, curly } from "./chunk";
import { callFunc, func, funcProto } from "./func";
import { gcc } from "./gcc";
import { includeRel, includeSys } from "./include";
import {
  and,
  assign,
  bitAnd,
  bitAndAssign,
  bitLeft,
  bitLeftAssign,
  bitNot,
  bitOr,
  bitOrAssign,
  bitRight,
  bitRightAssign,
  bitXor,
  bitXorAssign,
  div,
  divAssign,
  eq,
  gt,
  gte,
  lt,
  lte,
  minus,
  minusAssign,
  modulo,
  moduloAssign,
  mult,
  multAssign,
  neq,
  not,
  or,
  plus,
  plusAssign,
  postDec,
  postInc,
  preDec,
  preInc,
  ternary,
} from "./operators";
import { std } from "./std";
import { _if } from "./tc-if";
import { _var, arrInit, arrVar } from "./tc-var";
import { _return, _while, cast, join, joinWithPrefix, str } from "./utils";

export * from "./types";

export const tc = {
  chunk,
  curly,
  block,
  includeRel,
  includeSys,
  _var,
  _if,
  _while,
  funcProto,
  func,
  callFunc,
  _return,
  str,
  cast,
  arrVar,
  arrInit,
  std,
  join,
  joinWithPrefix,
  gcc,
  not,
  plus,
  minus,
  div,
  mult,
  and,
  or,
  modulo,
  preInc,
  postInc,
  preDec,
  postDec,
  eq,
  gt,
  lt,
  neq,
  gte,
  lte,
  ternary,
  bitAnd,
  bitOr,
  bitXor,
  bitLeft,
  bitRight,
  bitNot,
  assign,
  plusAssign,
  minusAssign,
  divAssign,
  multAssign,
  moduloAssign,
  bitAndAssign,
  bitOrAssign,
  bitXorAssign,
  bitLeftAssign,
  bitRightAssign,
};
